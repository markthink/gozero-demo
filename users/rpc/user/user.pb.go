// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReqUser struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqUser) Reset()         { *m = ReqUser{} }
func (m *ReqUser) String() string { return proto.CompactTextString(m) }
func (*ReqUser) ProtoMessage()    {}
func (*ReqUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *ReqUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqUser.Unmarshal(m, b)
}
func (m *ReqUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqUser.Marshal(b, m, deterministic)
}
func (m *ReqUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqUser.Merge(m, src)
}
func (m *ReqUser) XXX_Size() int {
	return xxx_messageInfo_ReqUser.Size(m)
}
func (m *ReqUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqUser.DiscardUnknown(m)
}

var xxx_messageInfo_ReqUser proto.InternalMessageInfo

func (m *ReqUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ReqUser) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type User struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CommResp struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommResp) Reset()         { *m = CommResp{} }
func (m *CommResp) String() string { return proto.CompactTextString(m) }
func (*CommResp) ProtoMessage()    {}
func (*CommResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *CommResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommResp.Unmarshal(m, b)
}
func (m *CommResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommResp.Marshal(b, m, deterministic)
}
func (m *CommResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommResp.Merge(m, src)
}
func (m *CommResp) XXX_Size() int {
	return xxx_messageInfo_CommResp.Size(m)
}
func (m *CommResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CommResp.DiscardUnknown(m)
}

var xxx_messageInfo_CommResp proto.InternalMessageInfo

func (m *CommResp) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *CommResp) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type LoginReq struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (m *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(m, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type RespLogin struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespLogin) Reset()         { *m = RespLogin{} }
func (m *RespLogin) String() string { return proto.CompactTextString(m) }
func (*RespLogin) ProtoMessage()    {}
func (*RespLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *RespLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespLogin.Unmarshal(m, b)
}
func (m *RespLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespLogin.Marshal(b, m, deterministic)
}
func (m *RespLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespLogin.Merge(m, src)
}
func (m *RespLogin) XXX_Size() int {
	return xxx_messageInfo_RespLogin.Size(m)
}
func (m *RespLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_RespLogin.DiscardUnknown(m)
}

var xxx_messageInfo_RespLogin proto.InternalMessageInfo

func (m *RespLogin) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ReqUserId struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqUserId) Reset()         { *m = ReqUserId{} }
func (m *ReqUserId) String() string { return proto.CompactTextString(m) }
func (*ReqUserId) ProtoMessage()    {}
func (*ReqUserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *ReqUserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqUserId.Unmarshal(m, b)
}
func (m *ReqUserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqUserId.Marshal(b, m, deterministic)
}
func (m *ReqUserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqUserId.Merge(m, src)
}
func (m *ReqUserId) XXX_Size() int {
	return xxx_messageInfo_ReqUserId.Size(m)
}
func (m *ReqUserId) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqUserId.DiscardUnknown(m)
}

var xxx_messageInfo_ReqUserId proto.InternalMessageInfo

func (m *ReqUserId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReqGetAll struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqGetAll) Reset()         { *m = ReqGetAll{} }
func (m *ReqGetAll) String() string { return proto.CompactTextString(m) }
func (*ReqGetAll) ProtoMessage()    {}
func (*ReqGetAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}

func (m *ReqGetAll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGetAll.Unmarshal(m, b)
}
func (m *ReqGetAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGetAll.Marshal(b, m, deterministic)
}
func (m *ReqGetAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGetAll.Merge(m, src)
}
func (m *ReqGetAll) XXX_Size() int {
	return xxx_messageInfo_ReqGetAll.Size(m)
}
func (m *ReqGetAll) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGetAll.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGetAll proto.InternalMessageInfo

type RespGetAll struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespGetAll) Reset()         { *m = RespGetAll{} }
func (m *RespGetAll) String() string { return proto.CompactTextString(m) }
func (*RespGetAll) ProtoMessage()    {}
func (*RespGetAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{7}
}

func (m *RespGetAll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespGetAll.Unmarshal(m, b)
}
func (m *RespGetAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespGetAll.Marshal(b, m, deterministic)
}
func (m *RespGetAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespGetAll.Merge(m, src)
}
func (m *RespGetAll) XXX_Size() int {
	return xxx_messageInfo_RespGetAll.Size(m)
}
func (m *RespGetAll) XXX_DiscardUnknown() {
	xxx_messageInfo_RespGetAll.DiscardUnknown(m)
}

var xxx_messageInfo_RespGetAll proto.InternalMessageInfo

func (m *RespGetAll) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*ReqUser)(nil), "user.reqUser")
	proto.RegisterType((*User)(nil), "user.user")
	proto.RegisterType((*CommResp)(nil), "user.commResp")
	proto.RegisterType((*LoginReq)(nil), "user.loginReq")
	proto.RegisterType((*RespLogin)(nil), "user.respLogin")
	proto.RegisterType((*ReqUserId)(nil), "user.reqUserId")
	proto.RegisterType((*ReqGetAll)(nil), "user.reqGetAll")
	proto.RegisterType((*RespGetAll)(nil), "user.respGetAll")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0x69, 0xbb, 0xd5, 0xee, 0x0c, 0x37, 0x09, 0x5e, 0x8c, 0x79, 0x33, 0x83, 0xb0, 0x89,
	0x50, 0x64, 0x3e, 0xc1, 0xbc, 0x91, 0x81, 0x78, 0x11, 0xf0, 0x01, 0xea, 0x72, 0x28, 0xa5, 0x7f,
	0xd2, 0x25, 0x19, 0xbe, 0xbb, 0x57, 0x92, 0xa4, 0xdd, 0x9f, 0x16, 0xbc, 0xf0, 0xa6, 0xf4, 0xcb,
	0xf9, 0xfa, 0x3b, 0xf9, 0xce, 0x29, 0xc0, 0x41, 0xa1, 0x8c, 0x6b, 0x29, 0xb4, 0x20, 0x03, 0xf3,
	0x4e, 0x37, 0x70, 0x25, 0x71, 0xff, 0xa9, 0x50, 0x92, 0x39, 0x44, 0xe6, 0xa8, 0x4a, 0x4a, 0x9c,
	0x79, 0x0b, 0x6f, 0x35, 0x62, 0x47, 0x6d, 0x6a, 0x75, 0xa2, 0xd4, 0xb7, 0x90, 0x7c, 0xe6, 0xbb,
	0x5a, 0xab, 0xe9, 0x07, 0x58, 0x14, 0x99, 0x80, 0x9f, 0x71, 0xfb, 0x65, 0xc0, 0xfc, 0x8c, 0x5f,
	0xf0, 0xfc, 0x3f, 0x78, 0x41, 0x87, 0xf7, 0x0c, 0xd1, 0x4e, 0x94, 0x25, 0x43, 0x55, 0x1b, 0xa6,
	0xc8, 0x2d, 0x33, 0x62, 0xbe, 0xc8, 0xc9, 0x2d, 0x0c, 0x51, 0x4a, 0x21, 0x1b, 0xa0, 0x13, 0xf4,
	0x15, 0xa2, 0x42, 0xa4, 0x59, 0xc5, 0x70, 0xff, 0xef, 0x14, 0xf7, 0x30, 0x92, 0xa8, 0xea, 0x77,
	0xc3, 0x31, 0x6d, 0xb4, 0xc8, 0xb1, 0x6a, 0x08, 0x4e, 0xd0, 0x3b, 0x63, 0xb1, 0xb3, 0xda, 0xf2,
	0x6e, 0x5a, 0x3a, 0xb6, 0xc5, 0x37, 0xd4, 0x9b, 0xa2, 0xa0, 0x31, 0x80, 0x81, 0x39, 0x45, 0x16,
	0x30, 0x34, 0x57, 0x50, 0x33, 0x6f, 0x11, 0xac, 0xc6, 0x6b, 0x88, 0xed, 0x16, 0xcc, 0x83, 0xb9,
	0xc2, 0xfa, 0xc7, 0x83, 0x81, 0xdd, 0xc1, 0x12, 0x86, 0x36, 0x09, 0xb9, 0x76, 0xa6, 0xa6, 0xdf,
	0x7c, 0xda, 0xca, 0xf6, 0x86, 0x4b, 0x08, 0x77, 0x12, 0x13, 0x8d, 0x5d, 0xe7, 0xc4, 0xc9, 0xe3,
	0x04, 0x1f, 0x20, 0x3c, 0xd4, 0xdc, 0x18, 0xcf, 0xfa, 0xf6, 0x5c, 0x8f, 0x10, 0x72, 0x2c, 0x50,
	0x23, 0x99, 0x5e, 0xe0, 0xb6, 0xbc, 0x67, 0xa5, 0x10, 0xa4, 0xa8, 0xfb, 0xbe, 0x33, 0x3c, 0x79,
	0x82, 0x30, 0x75, 0xd9, 0x4f, 0x36, 0x37, 0x8c, 0xf9, 0xcd, 0x29, 0x89, 0x3b, 0xf9, 0x0a, 0xed,
	0xff, 0xf8, 0xf2, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x19, 0x91, 0xf4, 0x9d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	Login(ctx context.Context, in *ReqUser, opts ...grpc.CallOption) (*RespLogin, error)
	Create(ctx context.Context, in *ReqUser, opts ...grpc.CallOption) (*CommResp, error)
	Update(ctx context.Context, in *User, opts ...grpc.CallOption) (*CommResp, error)
	Delete(ctx context.Context, in *ReqUserId, opts ...grpc.CallOption) (*CommResp, error)
	Get(ctx context.Context, in *ReqUserId, opts ...grpc.CallOption) (*User, error)
	GetAll(ctx context.Context, in *ReqGetAll, opts ...grpc.CallOption) (*RespGetAll, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) Login(ctx context.Context, in *ReqUser, opts ...grpc.CallOption) (*RespLogin, error) {
	out := new(RespLogin)
	err := c.cc.Invoke(ctx, "/user.User/login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Create(ctx context.Context, in *ReqUser, opts ...grpc.CallOption) (*CommResp, error) {
	out := new(CommResp)
	err := c.cc.Invoke(ctx, "/user.User/create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Update(ctx context.Context, in *User, opts ...grpc.CallOption) (*CommResp, error) {
	out := new(CommResp)
	err := c.cc.Invoke(ctx, "/user.User/update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Delete(ctx context.Context, in *ReqUserId, opts ...grpc.CallOption) (*CommResp, error) {
	out := new(CommResp)
	err := c.cc.Invoke(ctx, "/user.User/delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Get(ctx context.Context, in *ReqUserId, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/user.User/get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetAll(ctx context.Context, in *ReqGetAll, opts ...grpc.CallOption) (*RespGetAll, error) {
	out := new(RespGetAll)
	err := c.cc.Invoke(ctx, "/user.User/getAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	Login(context.Context, *ReqUser) (*RespLogin, error)
	Create(context.Context, *ReqUser) (*CommResp, error)
	Update(context.Context, *User) (*CommResp, error)
	Delete(context.Context, *ReqUserId) (*CommResp, error)
	Get(context.Context, *ReqUserId) (*User, error)
	GetAll(context.Context, *ReqGetAll) (*RespGetAll, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) Login(ctx context.Context, req *ReqUser) (*RespLogin, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedUserServer) Create(ctx context.Context, req *ReqUser) (*CommResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserServer) Update(ctx context.Context, req *User) (*CommResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedUserServer) Delete(ctx context.Context, req *ReqUserId) (*CommResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedUserServer) Get(ctx context.Context, req *ReqUserId) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedUserServer) GetAll(ctx context.Context, req *ReqGetAll) (*RespGetAll, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Login(ctx, req.(*ReqUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Create(ctx, req.(*ReqUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Update(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Delete(ctx, req.(*ReqUserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Get(ctx, req.(*ReqUserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetAll)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetAll(ctx, req.(*ReqGetAll))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "login",
			Handler:    _User_Login_Handler,
		},
		{
			MethodName: "create",
			Handler:    _User_Create_Handler,
		},
		{
			MethodName: "update",
			Handler:    _User_Update_Handler,
		},
		{
			MethodName: "delete",
			Handler:    _User_Delete_Handler,
		},
		{
			MethodName: "get",
			Handler:    _User_Get_Handler,
		},
		{
			MethodName: "getAll",
			Handler:    _User_GetAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
